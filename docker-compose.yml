services:
    zookeeper:
        image: confluentinc/cp-zookeeper:7.3.0
        platform: linux/amd64
        ports:
            - '2181:2181'
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
        networks:
            - kafka-net

    kafka1:
        image: confluentinc/cp-kafka:7.3.0
        hostname: kafka1
        ports:
            - '9092:9092'
        depends_on:
            - zookeeper
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_LISTENERS: PLAINTEXT://kafka1:29092,PLAINTEXT_HOST://0.0.0.0:9092
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:29092,PLAINTEXT_HOST://localhost:9092
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
            KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
        networks:
            - kafka-net

    kafka2:
        image: confluentinc/cp-kafka:7.3.0
        hostname: kafka2
        ports:
            - '9093:9092'
        depends_on:
            - zookeeper
        environment:
            KAFKA_BROKER_ID: 2
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_LISTENERS: PLAINTEXT://kafka2:29092,PLAINTEXT_HOST://0.0.0.0:9092
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:29092,PLAINTEXT_HOST://localhost:9093
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
            KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
        networks:
            - kafka-net

    kafka-tools:
        image: confluentinc/cp-kafka:7.3.0
        platform: linux/amd64
        hostname: kafka-tools
        depends_on:
            - kafka1
            - kafka2
        entrypoint:
            - /bin/bash
            - -c
        command: >
            echo "Starting Kafka tools container..." &&
            sleep 30 &&
            kafka-topics --bootstrap-server kafka1:29092 --list &&
            tail -f /dev/null
        networks:
            - kafka-net

    redis:
        image: redis:7
        container_name: redis
        ports:
            - '6379:6379'
        networks:
            - kafka-net

    kafka-ui:
        image: provectuslabs/kafka-ui
        ports:
            - '8080:8080'
        environment:
            - KAFKA_CLUSTERS_0_NAME=dev-cluster
            - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka1:29092,kafka2:29092
        depends_on:
            - kafka1
            - kafka2
        networks:
            - kafka-net

    auth-db:
        image: postgres:15
        container_name: auth-db
        restart: always
        environment:
            POSTGRES_USER: aman
            POSTGRES_PASSWORD: root
            POSTGRES_DB: auth_service
        ports:
            - '5433:5432'
        volumes:
            - auth_pgdata:/var/lib/postgresql/data
        networks:
            - kafka-net

    auth-service:
        build:
            context: .
            dockerfile: auth-service/Dockerfile
        container_name: auth-service
        ports:
            - '3000:4000'
        environment:
            NODE_ENV: development
            DB_HOST: auth-db
            DB_PORT: 5432
            DB_USERNAME: aman
            DB_PASSWORD: root
            DB_NAME: auth_service
            REDIS_URL: redis://redis:6379
        depends_on:
            - auth-db
            - redis
            - kafka1
            - kafka2
        networks:
            - kafka-net

    post-db:
        image: postgres:15
        container_name: post-db
        restart: always
        environment:
            POSTGRES_USER: aman
            POSTGRES_PASSWORD: root
            POSTGRES_DB: post_service
        ports:
            - '5432:5432'
        volumes:
            - 'post_pgdata:/var/lib/postgresql/data'
        networks:
            - kafka-net

    post-service:
        build:
            context: .
            dockerfile: post-services/Dockerfile
        container_name: post-services
        ports:
            - '3001:3000'
        environment:
            NODE_ENV: development
            DB_HOST: post-db
            DB_PORT: 5432
            DB_USERNAME: aman
            DB_PASSWORD: root
            DB_NAME: post_service
            REDIS_URL: redis://redis:6379
        depends_on:
            - auth-db
            - redis
            - kafka1
            - kafka2
        networks:
            - kafka-net

    nginx:
        image: nginx:alpine
        container_name: nginx
        ports:
            - '80:80'
        volumes:
            - ./gateway/nginx.conf:/etc/nginx/nginx.conf:ro
        depends_on:
            - auth-service
        networks:
            - kafka-net

volumes:
    auth_pgdata:
    backend2_pgdata:
    post_pgdata:

networks:
    kafka-net:
        driver: bridge
